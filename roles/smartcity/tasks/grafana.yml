---
# Grafana will allow us to create dashbord to visualize the data workflow (Ops dashboard)
# and the Business Application itself (Main dashboard).
# All the deployments are taken care of by the Grafana operator deployed previously (see requirements).

- name: Get PostgreSQL connection info
  k8s_info:
    api_version: v1
    kind: Secret
    name: postgresql
    namespace: "{{ install_namespace }}"
  register: postgres_secret

- name: Set PostgreQL facts
  set_fact:
    db_database: "{{ postgres_secret.resources[0].data['database-name'] | b64decode }}"
    db_user: "{{ postgres_secret.resources[0].data['database-user'] | b64decode }}"
    db_password: "{{ postgres_secret.resources[0].data['database-password'] | b64decode }}"

- name: Deploy Grafana PostgreSQL datasource
  k8s:
    state: present
    namespace: "{{ install_namespace }}"
    definition: "{{ lookup('template', 'grafana/grafana-pgsql-datasource.yaml.j2') | from_yaml_all }}"

- name: Add cluster-monitoring-view role to grafana-serviceaccount
  k8s:
    state: present
    definition: "{{ lookup('template', 'grafana/cluster-monitoring-view.yaml.j2') | from_yaml_all }}"

- name: Retrieve the bearer token to authenticate against Prometheus
  ansible.builtin.command: oc serviceaccounts get-token grafana-serviceaccount
  delegate_to: 127.0.0.1
  register: grafana_serviceaccount_token
  changed_when: grafana_serviceaccount_token != 0

- name: Set bearer_token for template
  set_fact:
    bearer_token: "{{ grafana_serviceaccount_token.stdout }}"

- name: Deploy Grafana Prometheus datasource
  k8s:
    state: present
    namespace: "{{ install_namespace }}"
    definition: "{{ lookup('template', 'grafana/grafana-prometheus-datasource.yaml.j2') | from_yaml_all }}"

- name: Get image server route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: image-server
    namespace: "{{ install_namespace }}"
  register: image_server_route_info

- name: Set image server route
  set_fact:
    image_server_host: "{{ image_server_route_info.resources[0].spec.host }}"

- name: Deploy Grafana main dashboard
  k8s:
    state: present
    namespace: "{{ install_namespace }}"
    definition: "{{ lookup('template', 'grafana/grafana-main-dashboard.yaml.j2') | from_yaml_all }}"

- name: Deploy Grafana pipeline dashboards
  k8s:
    state: present
    resource_definition: "{{ item }}"
    namespace: "{{ install_namespace }}"
  with_items:
    - "{{ lookup('file', 'grafana/grafana-pipeline-cpu-dashboard.yaml') | from_yaml_all }}" # CPU Ops dashboard
    - "{{ lookup('file', 'grafana/grafana-pipeline-ram-dashboard.yaml') | from_yaml_all }}" # RAM Ops dashboard
